on:
  workflow_call:
    inputs:
      godot_tag:
        required: true
        type: string
      godot_version:
        required: true
        type: string
      mono_tag:
        required: true
        type: string
      steamworks_sdk_tag:
        required: true
        type: string
    secrets:
      steamworks_sdk_repo:
        required: true
      steamworks_sdk_repo_token:
        required: true


jobs:
  build-linux:
    runs-on: ubuntu-latest

    name: Linux ${{ matrix.name }}
    
    env:
      SCONSFLAGS: mono_static=yes

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor and Templates
            build-mono: false
            cache-name: linux
            editor-name: godot.linuxbsd.editor.x86_64
            editor-name-new: godotsteam.multiplayer.${{ inputs.godot_version }}.editor.linux.x86_64
            debug-name: godot.linuxbsd.template_debug.x86_64
            debug-name-new: godotsteam.multiplayer.${{ inputs.godot_version }}.debug.template.linux.x86_64
            release-name: godot.linuxbsd.template_release.x86_64
            release-name-new: godotsteam.multiplayer.${{ inputs.godot_version }}.template.linux.x86_64

    steps:
      - uses: actions/checkout@v4

      # Download Godot to start
      - name: Download Godot
        uses: ./.github/actions/download-godot
        with:
          version: ${{ inputs.godot_tag }}

      # Download GodotSteam
      - name: Download GodotSteam
        uses: ./.github/actions/download-godotsteam

      # Download Steamworks SDK
      - name: Download Steamworks SDK
        uses: ./.github/actions/download-steamworks
        with:
          path: "steamworks"
          repository: ${{ secrets.steamworks_sdk_repo }}
          token: ${{ secrets.steamworks_sdk_repo_token }}
          ref: ${{ inputs.steamworks_sdk_tag }}

      # Download GodotSteam Multiplayer Peer
      - name: Download GodotSteam Multiplayer Peer
        uses: ./.github/actions/download-godotsteam-multiplayer
        with:
          path: "godotsteammultiplayer"

      # Mono prep
      - name: Move Shared Library For Mono
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/prep-mono
        with:
          path: "linux64"
          lib: "libsteam_api.so"

      # Setting up the Linux buildroot for older versions
      - name: Setup Linux Buildroot (x64_64)
        uses: ./.github/actions/prep-buildroot
        with:
          toolchain-name: "x86_64-godot-linux-gnu_sdk-buildroot"

      # Get that cache money
      - name: Setup Build Cache
        uses: ./.github/actions/setup-cache
        with:
          cache-name: ${{ matrix.cache-name }}
          godot-base: ${{ inputs.godot_tag }}
        continue-on-error: true

      # Setup Python and SCONS
      - name: Setup Python and SCONS
        uses: ./.github/actions/setup-dependencies

      # Setup Mono
      - name: Setup Mono (x86_64)
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/setup-mono
        with:
          mono-release: "linux-x86_64"
          mono-bcl: "bcl-desktop"
          mono-build-tag: ${{ inputs.mono_tag }}

      - name: Mono Precompilation
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/build-godot
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} module_mono_enabled=yes mono_glue=no copy_mono_root=yes mono_bcl=$HOME/mono-bcls/desktop-bcl/net_4_x mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release
          platform: linuxbsd
          target: editor

      # Generate Mono glue
      - name: Generate Mono glue code
        if: ${{ matrix.build-mono }}
        run: |
          DRI_PRIME=0 xvfb-run "./bin/godot.x11.tools.64.mono" --generate-mono-glue modules/mono/glue || true

      - name: Set Mono Scons flags
        if: ${{ matrix.build-mono }}
        run: |
          echo "MONO_SCONSFLAGS=module_mono_enabled=yes mono_glue=yes copy_mono_root=yes mono_bcl=$HOME/mono-bcls/desktop-bcl/net_4_x" >> $GITHUB_ENV

      - name: Clear bin
        run: |
          rm -rf bin

      # Compiling editor
      - name: Editor Compilation
        uses: ./.github/actions/build-godot
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }}
          platform: linuxbsd
          target: editor
          binary: ${{ matrix.editor-name }}
          export: ${{ matrix.editor-name-new }}

      - name: Upload Editor
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-editor
          path: ./bin/${{ matrix.editor-name-new }}

      - name: Clear bin
        run: |
          rm -rf bin

      # Compiling templates
      - name: Debug Template Compilation (target=template_debug)
        uses: ./.github/actions/build-godot
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }}
          platform: linuxbsd
          target: template_debug
          binary: ${{ matrix.debug-name }}
          export: ${{ matrix.debug-name-new }}

      - name: Upload Debug Template
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-debug-template
          path: ./bin/${{ matrix.debug-name-new }}

      - name: Release Template Compilation (target=template_release)
        uses: ./.github/actions/build-godot
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }} debug_symbols=no
          platform: linuxbsd
          target: template_release
          binary: ${{ matrix.release-name }}
          export: ${{ matrix.release-name-new }}

      - name: Upload Release Template
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-release-template
          path: ./bin/${{ matrix.release-name-new }}

      - name: Clear bin
        run: |
          rm -rf bin

      # Upload the Steam redistributable for packaging
      - name: Upload Linux Steam File
        uses: ./.github/actions/upload-steam-redistributable
        with:
          name: ${{ matrix.cache-name }}-steam
          path: linux64/
          redist: libsteam_api.so